-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Sample

local flatbuffers = require('flatbuffers')

local Monster_c2s = {} -- the module
local Monster_c2s_mt = {} -- the class metatable

function Monster_c2s.New()
    local o = {}
    setmetatable(o, {__index = Monster_c2s_mt})
    return o
end
function Monster_c2s.GetRootAsMonster_c2s(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = Monster_c2s.New()
    o:Init(buf, n + offset)
    return o
end
function Monster_c2s_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function Monster_c2s_mt:Pos()
    local o = self.view:Offset(4)
    if o ~= 0 then
        local x = o + self.view.pos
        local obj = require('common.Vec3').New()
        obj:Init(self.view.bytes, x)
        return obj
    end
end
function Monster_c2s_mt:Mana()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int16, o + self.view.pos)
    end
    return 150
end
function Monster_c2s_mt:Hp()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int16, o + self.view.pos)
    end
    return 100
end
function Monster_c2s_mt:Name()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function Monster_c2s_mt:St()
    local o = self.view:Offset(12)
    if o ~= 0 then
        local x = self.view:Indirect(o + self.view.pos)
        local obj = require('Sample.shareT').New()
        obj:Init(self.view.bytes, x)
        return obj
    end
end
function Monster_c2s.Start(builder) builder:StartObject(5) end
function Monster_c2s.AddPos(builder, pos) builder:PrependStructSlot(0, pos, 0) end
function Monster_c2s.AddMana(builder, mana) builder:PrependInt16Slot(1, mana, 150) end
function Monster_c2s.AddHp(builder, hp) builder:PrependInt16Slot(2, hp, 100) end
function Monster_c2s.AddName(builder, name) builder:PrependUOffsetTRelativeSlot(3, name, 0) end
function Monster_c2s.AddSt(builder, st) builder:PrependUOffsetTRelativeSlot(4, st, 0) end
function Monster_c2s.End(builder) return builder:EndObject() end

return Monster_c2s -- return the module