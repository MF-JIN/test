{
	"solution_file": "unity_test.sln",
	"folders":
	[
		// unity_test root
		{
			"path": ".",
			"file_exclude_patterns":
			[
				"*.meta",
				"*.pyc",
				"*.pyo",
				"*.exe",
				"*.dll",
				"*.obj",
				"*.o",
				"*.a",
				"*.lib",
				"*.so",
				"*.dylib",
				"*.ncb",
				"*.sdf",
				"*.suo",
				"*.pdb",
				"*.idb",
				".DS_Store",
				"*.class",
				"*.psd",
				"*.db",
				"*.sublime-workspace",
				"*.jar",
				"*.aar",
				"*.zip",
				"*.7z"
			],
			"folder_exclude_patterns":
			[
				".git",
				".svn",
				"._d",
				".metadata",
				".settings",
				".vs",
				".vscode",
				"bin",
				"ios.proj.*",
				".idea",
				".gradle",
				"libs",
				"build",
				"Library",
				"Obj",
				"tmp",
				"temp",
				"unity_test/AssetBundle"
			],
		},
		// UnityCsReference
		{
			"path": "../UnityCsReference",
			"file_include_patterns":
			[
				"*.c",
				"*.cpp",
				"*.cs",
				"*.lua",
				"*.sh",
				"[^.]*",
				"*.png",
				"*.asset",
				"*.prefab",
				"*.anim"
			],
			"folder_exclude_patterns":
			[
				".git",
				".svn",
				"._d",
				".metadata",
				".settings"
			],
		},
	],
	"build_systems":
	[
		{
			"name": "skynet (OSX)",
			"working_dir": "${project_path}/skynet/build",
			"file_regex": "(.+[^:]):(\\d+):(\\d+): (?:fatal )?((?:error|warning): .+)$",
			"shell_cmd": "mkdir -p ${project_path}/skynet/build && cd ${project_path}/skynet/build && cmake .. make -j12",
			"syntax": "Packages/CMakeBuilder/Syntax/Make.sublime-syntax",
			"variants":
			[
				{
					"name": "cmake",
					"shell_cmd": "mkdir -p ${project_path}/skynet/build && cd ${project_path}/skynet/build && cmake .. && make -j12"
				},
				{
					"name": "clean",
					"shell_cmd": "make -j12 clean"
				},
				{
					"name": "rebuild",
					"shell_cmd": "rm -rf ${project_path}/skynet/build && mkdir -p ${project_path}/skynet/build && cd ${project_path}/skynet/build && cmake .. && make -j12 rebuild_cache"
				},
				{
					"name": "run",
					"shell_cmd": "cd ${project_path}/skynet/build && ./skynet app/config.lua"
				},
			],
		},
	],
}
